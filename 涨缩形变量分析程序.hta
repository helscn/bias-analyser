<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>涨缩变形分析程序 Ver 1.0</title>
<script type="text/javascript">
/*
while(true){
	try{
		window.resizeTo(560,478);
		break;
	}catch(e){continue;}
}
*/
</script>
<hta:Application
ID="biasAnalyser"
applicationname=“涨缩变形分析程序"
version="1.0"
caption="yes"
sysmenu="yes"
resizable="no"
maximizebutton="yes"
minimizebutton="yes"
scroll="no"
showintaskbar="yes"
singleinstance="no"
windowstate="maximize"
contextmenu="no"
icon="./lib/icon.ico"
/>
<script type="text/javascript" src="./lib/jQuery-1.7.2.min.js"></script>
<script type="text/javascript" src="./lib/highcharts.js"></script>
<script type="text/javascript" src="./lib/qTip.js"></script>
<script type="text/javascript" src="./lib/dhtmlx.js"></script>
<script type="text/javascript">
var dhxLayout,dhxToolbar,chart;

function transArr(arr,spec,n,scale){
	if(n===undefined){n=4;}
	spec=spec || 0;
	scale=scale || 1;
	var newArr=new Array();
	var temp=Math.pow(10,n);
	for (var i=0;i<arr.length;i++){
		newArr.push(Math.round((arr[i]-spec)*scale*temp)/temp);
	}
	return newArr;
}

function roundTo(num,n,scale){
	if(n===undefined){n=4;}
	scale=scale || 1;
	num*=scale;
	var temp=Math.pow(10,n);
	return Math.round(num*temp)/temp;
}

function refreshChartSize(){

	if (dhxLayout.cells("b").getWidth()<405) {
		chart.container.style.width="400px";
		chart.width=400;
	}else{
		chart.container.style.width=dhxLayout.cells("b").getWidth()-5;
		chart.width=dhxLayout.cells("b").getWidth()-5;
	}
	if (dhxLayout.cells("b").getHeight()<430) {
		chart.container.style.height="400px";
		chart.height=400;
	}else{
		chart.container.style.height=dhxLayout.cells("b").getHeight()-30;
		chart.height=dhxLayout.cells("b").getHeight()-30;
	}
	chart.redraw();
}

$(document).ready(function() {
	dhxLayout = new dhtmlXLayoutObject(document.body, "2U");

	dhxToolbar = dhxLayout.attachToolbar();
	dhxToolbar.setIconsPath("./lib/imgs/toolbar/");
	dhxToolbar.loadXML("./data/dhxtoolbar.xml?" + new Date().getTime());

	dhxLayout.cells("a").setWidth(435);
	dhxLayout.cells("a").setText("数据输入");
	dhxGrid = dhxLayout.cells("a").attachGrid();
	dhxGrid.setImagePath("./lib/imgs/");
	dhxGrid.setHeader("分组名称,设计坐标,#cspan,是否拉伸,量测坐标,#cspan");
	dhxGrid.attachHeader(["#rspan","X坐标", "Y坐标", "#rspan", "X坐标", "Y坐标"]);
	dhxGrid.setInitWidths("70,80,80,40,80,80");
	dhxGrid.setColAlign("center,right,right,center,right,right");
	dhxGrid.init();
	
	dhxLayout.cells("b").setText("形变量示意图");
	dhxLayout.cells("b").attachObject("chart");
	dhxLayout.setEffect('collapse', true);
	dhxLayout.setEffect('resize', true);
	statusBar = dhxLayout.attachStatusBar();
	statusBar.setText("Simple Status Bar");
	//document.getElementById("chart").style.width=dhxLayout.cells("b").getWidth()-10;
	//document.getElementById("chart").style.height=dhxLayout.cells("b").getHeight()-40;
	
	Highcharts.setOptions({
		lang:{
			resetZoom:'恢复原始大小',
			resetZoomTitle:'取消视图缩放以显示所有数据.'
		}
	});
    chart = new Highcharts.Chart({
        chart: {
            renderTo: 'chart',
            type: 'line',
			zoomType: 'xy'
        },
		title: {
			text: '',
			style: {
				fontSize:'11pt'
			}
		},
        xAxis: {
            title: {
				text: 'X轴'
			},
			gridLineDashStyle:'dash',
			gridLineWidth:1
        },
        yAxis: {
            title: {
                text: 'Y轴'
            },
			gridLineDashStyle:'dash',
			gridLineWidth:1
        },
        tooltip: {
            formatter: function() {
                return 'X: '+this.x+' mil<br />Y: '+this.y+' mil<br />'+'D: '+Math.round(Math.sqrt(this.x*this.x+this.y*this.y)*100)/100+' mil';
            }
        },
        plotOptions: {
			series:{
				lineWidth:1,
				radius:2,
				lineWidth:1,
				pointStart:1
            }
        },
        series: [{
            name: 'X1',
            marker: {
                symbol: 'circle'
            },
            data: [[100,2],[-300,4],null,[500,600],[-270,-300]]
        }, {
            name: 'X2',
            marker: {
                symbol: 'circle'
            },
            data: []
        },{
            name: 'Y1',
            marker: {
                symbol: 'circle'
            },
            data: []
        },{
            name: 'Y2',
            marker: {
                symbol: 'circle'
            },
            data: []
        }]
    });
	
	dhxLayout.attachEvent("onResizeFinish",function(){
		refreshChartSize();
	});
	
/*
	$("[title]").qtip({
		style:{
			name:'blue',
			tip:true
		},
		position:{
			target:'mouse',
			adjust:{
				mouse:true,
				screen:true,
				x:0,
				y:-5
			}
		},
		show:{
			effect:{
				type:'fade',
				length:300
			}
		},
		hide:{
			effect:{
				type:'fade',
				length:300
			}
		}
	});
*/
});

</script>
<link rel="stylesheet" type="text/css" href="./lib/dhtmlx.css"></style>
<style type="text/css">
    html, body {
        width: 100%;
        height: 100%;
        margin: 0px;
        padding: 0px;
        overflow: hidden;
    }
</style>
</head>
<body>
<div style="height:0px" id="container"></div>
<div style="width:600px;height:600px;border:1px solid black" id="chart"></div>
</div>
</body>
</html>
